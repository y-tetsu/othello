#!/usr/bin/env python
"""
定石打ち
"""

import sys
sys.path.append('../')

from reversi.strategies.common import Timer, Measure, CPU_TIME, AbstractStrategy
from reversi.strategies.alphabeta import AlphaBeta4_TPW
from reversi.strategies.fullreading import AlphaBeta4F9_TPW, AbIF9_B_TPW, AbIF9_B_TPWE, AbIF9_B_TPWEC, NsIF9_B_TPW, NsIF9_B_TPW2, NsIF9_B_TPWE, SwitchNsIF9_B_TPW, SwitchNsIF9_B_TPWE


# ===== 定石リスト =====
# 兎定石
RABBIT = {
    #---------------------------------------------------------------------
    # 1手目
    # □□□□□□□□
    # □□□□□□□□
    # □□□□□□□□
    # □□□●〇□□□
    # □□□〇●◎□□
    # □□□□□□□□
    # □□□□□□□□
    # □□□□□□□□
    ('black', 0x0000000810000000, 0x0000001008000000): (5, 4),
    #---------------------------------------------------------------------
    # 2手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□◎□□□ □□□□□□□□ □□□〇□□□□
    # □□□●〇□□□ □□〇〇〇□□□ □□□●〇◎□□ □□□〇〇□□□
    # □□□〇〇〇□□ □□□〇●□□□ □□□〇〇□□□ □□◎〇●□□□
    # □□□◎□□□□ □□□□□□□□ □□□□〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000081C000000, 0x0000001000000000): (3, 5),
    ('white', 0x0000003810000000, 0x0000000008000000): (4, 2),
    ('white', 0x0000000818080000, 0x0000001000000000): (5, 3),
    ('white', 0x0000101810000000, 0x0000000008000000): (2, 4),
    #---------------------------------------------------------------------
    # 3手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□●□□□ □□□□◎□□□ □□□〇□□□□
    # □□□●〇□□□ □□〇〇●◎□□ □□□●●●□□ □□□〇〇□□□
    # □□◎●〇〇□□ □□□〇●□□□ □□□〇〇□□□ □□●●●□□□
    # □□□●□□□□ □□□□□□□□ □□□□〇□□□ □□□◎□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000080C000000, 0x0000001010100000): (2, 4),
    ('black', 0x0000003010000000, 0x0000080808000000): (5, 3),
    ('black', 0x0000000018080000, 0x0000001C00000000): (4, 2),
    ('black', 0x0000101800000000, 0x0000000038000000): (3, 5),
    #---------------------------------------------------------------------
    # 4手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□●□□□ □□□□〇□□□ □□□〇◎□□□
    # □□□●〇◎□□ □□〇〇〇〇□□ □□□●〇●□□ □□□〇〇□□□
    # □□〇〇〇〇□□ □□◎〇●□□□ □□□〇〇□□□ □□●〇●□□□
    # □□□●□□□□ □□□□□□□□ □□□◎〇□□□ □□□〇□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000083C000000, 0x0000001000100000): (5, 3),
    ('white', 0x0000003C10000000, 0x0000080008000000): (2, 4),
    ('white', 0x0000080818080000, 0x0000001400000000): (3, 5),
    ('white', 0x0000101810100000, 0x0000000028000000): (4, 2),
    #---------------------------------------------------------------------
    # 5手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□◎□□□ □□□□●□□□ □□□□〇□□□ □□□〇●□□□
    # □□□●●●□□ □□〇●〇〇□□ □□□●〇●□□ □□□●●◎□□
    # □□〇〇●〇□□ □□●●●□□□ □□◎●●□□□ □□●〇●□□□
    # □□□●□□□□ □□□◎□□□□ □□□●〇□□□ □□□〇□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000000034000000, 0x0000001C08100000): (4, 2),
    ('black', 0x0000002C00000000, 0x0000081038000000): (3, 5),
    ('black', 0x0000080800080000, 0x0000001418100000): (2, 4),
    ('black', 0x0000100010100000, 0x0000081828000000): (5, 3),
}

# Sローズ基本形
SROSE = {
    #---------------------------------------------------------------------
    # 6手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□□□●◎□□ □□□□〇◎□□ □□□〇●□□□
    # □□□〇●●□□ □□〇●〇〇□□ □□□〇〇●□□ □□□●●〇□□
    # □□〇〇●〇□□ □□●●〇□□□ □□〇●●□□□ □□●〇〇□□□
    # □□◎●□□□□ □□□〇□□□□ □□□●〇□□□ □□◎〇□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000081034000000, 0x0000000C08100000): (2, 5),
    ('white', 0x0000002C08100000, 0x0000081030000000): (5, 2),
    ('white', 0x0000081820080000, 0x0000000418100000): (5, 2),
    ('white', 0x0000100418100000, 0x0000081820000000): (2, 5),
    #---------------------------------------------------------------------
    # 7手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□◎〇□□□ □□□□●●□□ □□□□〇●□□ □□□〇●□□□
    # □□□〇●●□□ □□〇●●〇□□ □□◎〇●●□□ □□□●●〇□□
    # □□〇●●〇□□ □□●●〇□□□ □□〇●●□□□ □□●●〇◎□□
    # □□●●□□□□ □□□〇◎□□□ □□□●〇□□□ □□●〇□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000081024000000, 0x0000000C18300000): (3, 2),
    ('black', 0x0000002408100000, 0x00000C1830000000): (4, 5),
    ('black', 0x0000081020080000, 0x0000040C18100000): (2, 3),
    ('black', 0x0000100408100000, 0x0000081830200000): (5, 4),
    #---------------------------------------------------------------------
    # 8手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□◎□●●□□ □□□□〇●□□ □□◎〇●□□□
    # □□□〇〇●□□ □□〇●●〇□□ □□〇〇●●□□ □□□●〇〇□□
    # □□〇●●〇□□ □□●〇〇□□□ □□〇〇●□□□ □□●●〇〇□□
    # □□●●□◎□□ □□□〇〇□□□ □□□●〇◎□□ □□●〇□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000181824000000, 0x0000000418300000): (5, 5),
    ('white', 0x0000002418180000, 0x00000C1820000000): (2, 2),
    ('white', 0x0000083030080000, 0x0000040C08100000): (5, 5),
    ('white', 0x0000100C0C100000, 0x0000081030200000): (2, 2),
    #---------------------------------------------------------------------
    # 9手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●◎●●□□ □□□□〇●□□ □□●●●□□□
    # □□□〇〇●□□ □□●●●〇□□ □□〇〇●●□□ □□◎●〇〇□□
    # □□〇●●●□□ □□●〇〇□□□ □□〇〇●◎□□ □□●●〇〇□□
    # □□●●◎●□□ □□□〇〇□□□ □□□●●●□□ □□●〇□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000181820000000, 0x000000041C340000): (4, 5),
    ('black', 0x0000000418180000, 0x00002C3820000000): (3, 2),
    ('black', 0x0000083030000000, 0x0000040C081C0000): (5, 4),
    ('black', 0x0000000C0C100000, 0x0000381030200000): (2, 3),
    #---------------------------------------------------------------------
    # 10手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□◎□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●〇●●□□ □□□□〇●□□ □□●●●□□□
    # □□□〇〇●□□ □□●〇●〇□□ □□〇〇●●◎□ □□〇〇〇〇□□
    # □□〇●〇●□□ □□●〇〇□□□ □□〇〇〇〇□□ □◎●●〇〇□□
    # □□●●〇●□□ □□□〇〇□□□ □□□●●●□□ □□●〇□□□□
    # □□□◎□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000181828080000, 0x0000000414340000): (3, 6),
    ('white', 0x0000101418180000, 0x00002C2820000000): (4, 1),
    ('white', 0x000008303C000000, 0x0000040C001C0000): (6, 3),
    ('white', 0x0000003C0C100000, 0x0000380030200000): (1, 4),
    #---------------------------------------------------------------------
    # 11手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□●□□□ □□□□□□□□ □□□□□◎□□
    # □□□〇〇□◎□ □□●●●●□□ □□□□〇●□□ □□●●●□□□
    # □□□〇〇●□□ □□●〇●〇□□ □□〇〇●●●□ □□●〇〇〇□□
    # □□〇●〇●□□ □□●〇〇□□□ □□〇〇〇●□□ □●●●〇〇□□
    # □□●●●●□□ □◎□〇〇□□□ □□□●●●□□ □□●〇□□□□
    # □□□●□□□□ □□□□□□□□ □□◎□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000181828000000, 0x00000004143C1000): (6, 2),
    ('black', 0x0000001418180000, 0x00083C2820000000): (1, 5),
    ('black', 0x0000083038000000, 0x0000040E041C0000): (2, 6),
    ('black', 0x0000001C0C100000, 0x0000382070200000): (5, 1),
    #---------------------------------------------------------------------
    # 12手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□●□□□ □□□□□□□□ □□□□□〇□□
    # □□□〇〇□〇□ □□●●●●□□ □□□◎〇●□□ □□●●〇□□□
    # □□◎〇〇〇□□ □□●〇●〇□□ □□〇〇●●●□ □□●〇〇〇□□
    # □□〇●〇●□□ □□〇〇〇◎□□ □□〇〇〇●□□ □●●●〇〇□□
    # □□●●●●□□ □〇□〇〇□□□ □□□〇●●□□ □□●〇◎□□□
    # □□□●□□□□ □□□□□□□□ □□〇□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x00001A1C28000000, 0x00000000143C1000): (2, 3),
    ('white', 0x0000001438580000, 0x00083C2800000000): (5, 4),
    ('white', 0x0000083038102000, 0x0000040E040C0000): (3, 2),
    ('white', 0x0004081C0C100000, 0x0000302070200000): (4, 5),
}

# 虎定石
TIGER = {
    #---------------------------------------------------------------------
    # 3手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□◎□□□□□ □□□□●□□□ □□◎□□□□□ □□□〇□□□□
    # □□□●〇□□□ □□〇〇●□□□ □□□●●●□□ □□□〇〇□□□
    # □□□●〇〇□□ □□□〇●□□□ □□□〇〇□□□ □□●●●□□□
    # □□□●□□□□ □□□□□◎□□ □□□□〇□□□ □□□□□◎□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000080C000000, 0x0000001010100000): (2, 2),
    ('black', 0x0000003010000000, 0x0000080808000000): (5, 5),
    ('black', 0x0000000018080000, 0x0000001C00000000): (2, 2),
    ('black', 0x0000101800000000, 0x0000000038000000): (5, 5),
}

# ローズビル基本形
ROSEVILLE = {
    #---------------------------------------------------------------------
    # 4手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□○◎□□□□ □□□□●□□□ □□○□□□□□ □□□〇□□□□
    # □□□○〇□□□ □□〇〇●□□□ □□◎○●●□□ □□□〇〇□□□
    # □□□●〇〇□□ □□□〇○□□□ □□□〇〇□□□ □□●●○◎□□
    # □□□●□□□□ □□□□◎○□□ □□□□〇□□□ □□□□□○□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000020180C000000, 0x0000000010100000): (3, 2),
    ('white', 0x0000003018040000, 0x0000080800000000): (4, 5),
    ('white', 0x0000201018080000, 0x0000000C00000000): (2, 3),
    ('white', 0x0000101808040000, 0x0000000030000000): (5, 4),
    #---------------------------------------------------------------------
    # 5手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□○●□□□□ □□□□●□□□ □□○◎□□□□ □□□〇□□□□
    # □□◎●〇□□□ □□〇〇●□□□ □□●●●●□□ □□□〇〇□□□
    # □□□●〇〇□□ □□□〇●◎□□ □□□〇〇□□□ □□●●●●□□
    # □□□●□□□□ □□□□●○□□ □□□□〇□□□ □□□□◎○□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000020080C000000, 0x0000101010100000): (2, 3),
    ('black', 0x0000003010040000, 0x0000080808080000): (5, 4),
    ('black', 0x0000200018080000, 0x0000003C00000000): (3, 2),
    ('black', 0x0000101800040000, 0x000000003C000000): (4, 5),
    #---------------------------------------------------------------------
    # 6手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□○●□□□□ □□□□●□□□ □□○〇□□□□ □□□〇◎□□□
    # □□〇〇〇◎□□ □□〇〇●□□□ □□●〇●●□□ □□□〇〇□□□
    # □□□●〇〇□□ □□◎〇〇〇□□ □□□〇〇□□□ □□●●〇●□□
    # □□□●□□□□ □□□□●○□□ □□□◎〇□□□ □□□□〇○□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000020380C000000, 0x0000100010100000): (5, 3),
    ('white', 0x000000301C040000, 0x0000080800080000): (2, 4),
    ('white', 0x0000301018080000, 0x0000002C00000000): (3, 5),
    ('white', 0x00001018080C0000, 0x0000000034000000): (4, 2),
    #---------------------------------------------------------------------
    # 7手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□○●□□□□ □□□□●□□□ □□○〇◎□□□ □□□〇●□□□
    # □□〇〇〇●□□ □□〇●●◎□□ □□●〇●●□□ □□□●〇□□□
    # □□◎●●〇□□ □□●〇〇〇□□ □□□〇●□□□ □□●●〇●□□
    # □□□●□□□□ □□□□●○□□ □□□●〇□□□ □□□◎〇○□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000203804000000, 0x0000100418100000): (2, 4),
    ('black', 0x000000201C040000, 0x0000081820080000): (5, 3),
    ('black', 0x0000301010080000, 0x0000002C08100000): (4, 2),
    ('black', 0x00001008080C0000, 0x0000081034000000): (3, 5),
    #---------------------------------------------------------------------
    # 8手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□◎□□□□□ □□□□□□□□
    # □◎○●□□□□ □□□□●□□□ □□○〇〇□□□ □□□〇●□□□
    # □□〇〇〇●□□ □□〇〇〇〇□□ □□●〇〇●□□ □□□〇〇□□□
    # □□〇〇〇〇□□ □□●〇〇〇□□ □□□〇〇□□□ □□●〇〇●□□
    # □□□●□□□□ □□□□●○◎□ □□□●〇□□□ □□□〇〇○□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□◎□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000020383C000000, 0x0000100400100000): (1, 2),
    ('white', 0x0000003C1C040000, 0x0000080020080000): (6, 5),
    ('white', 0x0000381818080000, 0x0000002400100000): (2, 1),
    ('white', 0x00001018181C0000, 0x0000080024000000): (5, 6),
    #---------------------------------------------------------------------
    # 9手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□◎□□□□□ □□□□□□□□ □□●□□□□□ □□□□□□□□
    # □●●●□□□□ □□□□●□□□ □◎●〇〇□□□ □□□〇●□□□
    # □□〇〇〇●□□ □□〇〇〇〇□□ □□●〇〇●□□ □□□〇〇□□□
    # □□〇〇〇〇□□ □□●〇〇〇□□ □□□〇〇□□□ □□●〇〇●□□
    # □□□●□□□□ □□□□●●●□ □□□●〇□□□ □□□〇〇●◎□
    # □□□□□□□□ □□□□□◎□□ □□□□□□□□ □□□□□●□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000383C000000, 0x0000700400100000): (2, 1),
    ('black', 0x0000003C1C000000, 0x00000800200E0000): (5, 6),
    ('black', 0x0000181818080000, 0x0020202400100000): (1, 2),
    ('black', 0x0000101818180000, 0x0000080024040400): (6, 5),

}

# 牛定石
BULL = {
    #---------------------------------------------------------------------
    # 2手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□◎□□□□□ □□□□□□□□ □□◎〇□□□□
    # □□□●〇□□□ □□〇●〇□□□ □□□●〇□□□ □□□●〇□□□
    # □□□〇●〇□□ □□□〇●□□□ □□□〇●□□□ □□□〇●□□□
    # □□□□□◎□□ □□□□□□□□ □□□□〇◎□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000081C000000, 0x0000001000000000): (5, 5),
    ('white', 0x0000003810000000, 0x0000000008000000): (2, 2),
    ('white', 0x0000000818080000, 0x0000001000000000): (5, 5),
    ('white', 0x0000101810000000, 0x0000000008000000): (2, 2),
    #---------------------------------------------------------------------
    # 3手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□●◎□□□□ □□□□□□□□ □□●〇□□□□
    # □□□●〇□□□ □□〇●〇□□□ □□□●〇□□□ □□◎●〇□□□
    # □□□〇●〇□□ □□□〇●□□□ □□□〇●◎□□ □□□〇●□□□
    # □□□□◎●□□ □□□□□□□□ □□□□〇●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000000814000000, 0x0000001008040000): (4, 5),
    ('black', 0x0000002810000000, 0x0000201008000000): (3, 2),
    ('black', 0x0000000810080000, 0x0000001008040000): (5, 4),
    ('black', 0x0000100810000000, 0x0000201008000000): (2, 3),
    #---------------------------------------------------------------------
    # 4手目
    # □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□●○□□□□
    # □□□●〇◎□□ □□〇○〇□□□
    # □□□〇○〇□□ □□◎〇●□□□
    # □□□□○●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□
    ('white', 0x000000081C080000, 0x0000001000040000): (5, 3),
    ('white', 0x0000103810000000, 0x0000200008000000): (2, 4),
    #---------------------------------------------------------------------
    # 5手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□◎□□□ □□●○□□□□ □□□□□□□□ □□●●●□□□
    # □□□●●●□□ □□●○〇□□□ □□□●〇□□□ □□○○●◎□□
    # □□□〇○●□□ □□●●●□□□ □□◎●○○□□ □□□〇●□□□
    # □□□□○●□□ □□□◎□□□□ □□□●●●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000000018080000, 0x0000001C04040000): (4, 2),
    ('black', 0x0000101800000000, 0x0000202038000000): (3, 5),
    ('black', 0x000000080C000000, 0x00000010101C0000): (2, 4),
    ('black', 0x0000003010000000, 0x0000380808000000): (5, 3),
    #---------------------------------------------------------------------
    # 6手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□●○□□□□ □□□□◎□□□ □□●●●□□□
    # □□□●〇●□□ □□●○〇◎□□ □□□●〇□□□ □□○○〇〇□□
    # □□◎〇○●□□ □□●〇●□□□ □□〇〇○○□□ □□□〇●□□□
    # □□□□○●□□ □□□〇□□□□ □□□●●●□□ □□□◎□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000080818080000, 0x0000001404040000): (2, 4),
    ('white', 0x0000101810100000, 0x0000202028000000): (5, 3),
    ('white', 0x000000083C000000, 0x00000010001C0000): (4, 2),
    ('white', 0x0000003C10000000, 0x0000380008000000): (3, 5),
}

# 快速船基礎形
FASTBOAT = {
    #---------------------------------------------------------------------
    # 7手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□●○□□□□ □□□◎●□□□ □□●●●□□□
    # □□◎●〇●□□ □□●●●●□□ □□□●●□□□ □□○●〇〇□□
    # □□●●●●□□ □□●〇●◎□□ □□〇〇●○□□ □□□●●□□□
    # □□□□○●□□ □□□〇□□□□ □□□●●●□□ □□□●◎□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000080800080000, 0x000000143C040000): (2, 3),
    ('black', 0x0000100010100000, 0x0000203C28000000): (5, 4),
    ('black', 0x0000000034000000, 0x00000818081C0000): (3, 2),
    ('black', 0x0000002C00000000, 0x0000381018100000): (4, 5),
    #---------------------------------------------------------------------
    # 8手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□◎□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□●○□□□□ □□□〇●□□□ □□●●●□□□
    # □□〇〇〇●□□ □□●●〇●□□ □□□〇〇□□□ □◎○●〇〇□□
    # □□●〇●●□□ □□●〇〇〇□□ □□〇〇●○◎□ □□□〇〇□□□
    # □□□□○●□□ □□□〇□□□□ □□□●●●□□ □□□●〇□□□
    # □□□□◎□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000083810080000, 0x000000042C040000): (4, 6),
    ('white', 0x000010081C100000, 0x0000203420000000): (3, 1),
    ('white', 0x0000101834000000, 0x00000800081C0000): (6, 4),
    ('white', 0x0000002C18080000, 0x0000381000100000): (1, 3),
    #---------------------------------------------------------------------
    # 9手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□●□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□●●□◎□□ □□□〇●◎□□ □□●●●□□□
    # □□〇〇〇●□□ □□●●〇●□□ □□□〇〇□□□ □●●●〇〇□□
    # □□●〇●●□□ □□●〇〇〇□□ □□〇〇●●●□ □□□〇〇□□□
    # □□◎□●●□□ □□□〇□□□□ □□□●●●□□ □□◎●〇□□□
    # □□□□●□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000083810000000, 0x000000042C0C0800): (2, 5),
    ('black', 0x000000081C100000, 0x0010303420000000): (5, 2),
    ('black', 0x0000101830000000, 0x000008000E1C0000): (5, 2),
    ('black', 0x0000000C18080000, 0x0000387000100000): (2, 5),
    #---------------------------------------------------------------------
    # 10手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□◎□□□ □□□●□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□●●□〇□□ □□□〇〇〇□□ □□●●●□□□
    # □□〇〇〇●□□ □□●●〇〇□□ □□□〇〇□□□ □●●●〇〇◎□
    # □□〇〇●●□□ □□●〇〇〇□□ □◎〇〇●●●□ □□□〇〇□□□
    # □□〇□●●□□ □□□〇□□□□ □□□●●●□□ □□〇〇〇□□□
    # □□□□●□□□ □□□◎□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000083830200000, 0x000000040C0C0800): (4, 1),
    ('white', 0x0000040C1C100000, 0x0010303020000000): (3, 6),
    ('white', 0x00001C1830000000, 0x000000000E1C0000): (1, 4),
    ('white', 0x0000000C18380000, 0x0000387000000000): (6, 3),
    #---------------------------------------------------------------------
    # 11手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□●□□□ □□□●□□□□ □□□□□□□□ □□□□□□□□
    # □□□□●◎□□ □□●●□〇□□ □□□〇〇〇□□ □□●●●◎□□
    # □□〇〇●●□□ □□●●〇〇□□ □□□〇〇□□□ □●●●●●●□
    # □□〇〇●●□□ □□●●〇〇□□ □●●●●●●□ □□□〇〇□□□
    # □□〇□●●□□ □□◎●□□□□ □□◎●●●□□ □□〇〇〇□□□
    # □□□□●□□□ □□□●□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000003030200000, 0x0008080C0C0C0800): (5, 2),
    ('black', 0x0000040C0C000000, 0x0010303030101000): (2, 5),
    ('black', 0x00001C1800000000, 0x000000007E1C0000): (2, 5),
    ('black', 0x0000000018380000, 0x0000387E00000000): (5, 2),
    #---------------------------------------------------------------------
    # 12手目
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□●◎□□ □□□●□□□□ □□□□□□□□ □□□□□□□□
    # □□□□●〇□□ □□●●□〇□□ □□□〇〇〇□□ □□●●●〇◎□
    # □□〇〇〇●□□ □□●●〇〇□□ □□□〇〇□□□ □●●●〇●●□
    # □□〇〇●●□□ □□●〇〇〇□□ □●●〇●●●□ □□□〇〇□□□
    # □□〇□●●□□ □□〇●□□□□ □◎〇●●●□□ □□〇〇〇□□□
    # □□□□●□□□ □□◎●□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000043830200000, 0x000808040C0C0800): (5, 1),
    ('white', 0x0000040C1C200000, 0x0010303020101000): (2, 6),
    ('white', 0x00001C1810200000, 0x000000006E1C0000): (1, 5),
    ('white', 0x0000040818380000, 0x0000387600000000): (6, 2),
}

# 鼠定石
MOUSE = {
    #---------------------------------------------------------------------
    # 2手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□〇◎□□□
    # □□□●●◎□□ □□〇〇〇□□□ □□□●〇□□□ □□□〇●□□□
    # □□□〇〇〇□□ □□◎●●□□□ □□□●〇□□□ □□□〇●□□□
    # □□□□□□□□ □□□□□□□□ □□□◎〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000081C000000, 0x0000001000000000): (5, 3),
    ('white', 0x0000003810000000, 0x0000000008000000): (2, 4),
    ('white', 0x0000000818080000, 0x0000001000000000): (3, 5),
    ('white', 0x0000101810000000, 0x0000000008000000): (4, 2),
    #---------------------------------------------------------------------
    # 3手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□◎□□□ □□□□□□□□ □□□□□□□□ □□□〇●□□□
    # □□□●●●□□ □□〇〇〇□□□ □□□●〇□□□ □□□〇●◎□□
    # □□□〇〇〇□□ □□●●●□□□ □□◎●〇□□□ □□□〇●□□□
    # □□□□□□□□ □□□◎□□□□ □□□●〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000001C000000, 0x0000001C00000000): (4, 2),
    ('black', 0x0000003800000000, 0x0000000038000000): (3, 5),
    ('black', 0x0000000808080000, 0x0000001010100000): (2, 4),
    ('black', 0x0000101010000000, 0x0000080808000000): (5, 3),
    #---------------------------------------------------------------------
    # 4手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□◎□□□□□ □□□□□□□□ □□◎〇●□□□
    # □□□●〇●□□ □□〇〇〇□□□ □□□●〇□□□ □□□〇〇〇□□
    # □□□〇〇〇□□ □□●〇●□□□ □□〇〇〇□□□ □□□〇●□□□
    # □□□□□◎□□ □□□〇□□□□ □□□●〇◎□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000008081C000000, 0x0000001400000000): (5, 5),
    ('white', 0x0000003810100000, 0x0000000028000000): (2, 2),
    ('white', 0x0000000838080000, 0x0000001000100000): (5, 5),
    ('white', 0x0000101C10000000, 0x0000080008000000): (2, 2),
    #---------------------------------------------------------------------
    # 5手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□◎〇□□□ □□●□□□□□ □□□□□□□□ □□●●●□□□
    # □□□●〇●□□ □□●●〇□□□ □□◎●〇□□□ □□□●〇〇□□
    # □□□〇●●□□ □□●〇●□□□ □□〇〇●□□□ □□□〇●◎□□
    # □□□□□●□□ □□□〇◎□□□ □□□●●●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000080810000000, 0x000000140C040000): (3, 2),
    ('black', 0x0000000810100000, 0x0000203028000000): (4, 5),
    ('black', 0x0000000830000000, 0x00000010081C0000): (2, 3),
    ('black', 0x0000000C10000000, 0x0000381008000000): (5, 4),
    #---------------------------------------------------------------------
    # 6手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●□□□□□ □□□□◎□□□ □□●●●□□□
    # □□□〇〇●□□ □□●●〇◎□□ □□〇〇〇□□□ □□□●〇〇□□
    # □□◎〇●●□□ □□●〇〇□□□ □□〇〇●□□□ □□□〇〇〇□□
    # □□□□□●□□ □□□〇〇□□□ □□□●●●□□ □□□◎□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000181810000000, 0x000000040C040000): (2, 4),
    ('white', 0x0000000818180000, 0x0000203020000000): (5, 3),
    ('white', 0x0000003830000000, 0x00000000081C0000): (4, 2),
    ('white', 0x0000000C1C000000, 0x0000381000000000): (3, 5),
    #---------------------------------------------------------------------
    # 7手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●□◎□□□ □□□□●□□□ □□●●●□□□
    # □□□〇〇●□□ □□●●●●□□ □□〇〇●◎□□ □□□●〇〇□□
    # □□●●●●□□ □□●〇〇□□□ □□〇〇●□□□ □□◎●〇〇□□
    # □□□◎□●□□ □□□〇〇□□□ □□□●●●□□ □□□●□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000181800000000, 0x000000043C040000): (3, 5),
    ('black', 0x0000000018180000, 0x0000203C20000000): (4, 2),
    ('black', 0x0000003030000000, 0x00000808081C0000): (5, 3),
    ('black', 0x0000000C0C000000, 0x0000381010100000): (2, 4),
    #---------------------------------------------------------------------
    # 8手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●□〇□□□ □□□◎●□□□ □□●●●□□□
    # □□◎〇〇●□□ □□●●〇●□□ □□〇〇〇〇□□ □□□●〇〇□□
    # □□●〇●●□□ □□●〇〇◎□□ □□〇〇●□□□ □□〇〇〇〇□□
    # □□□〇□●□□ □□□〇〇□□□ □□□●●●□□ □□□●◎□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000181810100000, 0x000000042C040000): (2, 3),
    ('white', 0x0000080818180000, 0x0000203420000000): (5, 4),
    ('white', 0x0000003C30000000, 0x00000800081C0000): (3, 2),
    ('white', 0x0000000C3C000000, 0x0000381000100000): (4, 5),
    #---------------------------------------------------------------------
    # 9手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●◎〇□□□ □□□●●□□□ □□●●●□□□
    # □□●●●●□□ □□●●〇●□□ □□〇●〇〇□□ □□◎●●〇□□
    # □□●〇●●□□ □□●●●●□□ □□〇●●◎□□ □□〇〇●〇□□
    # □□□〇◎●□□ □□□〇〇□□□ □□□●●●□□ □□□●●□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000180010100000, 0x0000003C2C040000): (4, 5),
    ('black', 0x0000080800180000, 0x000020343C000000): (3, 2),
    ('black', 0x0000002C20000000, 0x00001810181C0000): (5, 4),
    ('black', 0x0000000434000000, 0x0000381808180000): (2, 3),
    #---------------------------------------------------------------------
    # 10手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□◎□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●〇〇□□□ □□□●●□◎□ □□●●●□□□
    # □□●●〇●□□ □□●〇〇●□□ □□〇●〇〇□□ □□〇〇〇〇□□
    # □□●〇〇●□□ □□●〇●●□□ □□〇〇〇〇□□ □□〇〇●〇□□
    # □□□〇〇●□□ □□□〇〇□□□ □□□●●●□□ □◎□●●□□□
    # □□◎□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000180818180000, 0x0000003424040000): (2, 6),
    ('white', 0x0000181810180000, 0x000020242C000000): (5, 1),
    ('white', 0x0000002C3C000000, 0x00001810001C0000): (6, 2),
    ('white', 0x0000003C34000000, 0x0000380008180000): (1, 5),
    #---------------------------------------------------------------------
    # 11手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□◎●□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●〇●□□□ □□□●●□●□ □□●●●□□□
    # □□●●〇●□□ □□●●〇●□□ □□〇●〇●◎□ □□〇●〇〇□□
    # □□●〇●●□□ □□●〇●●□□ □□〇〇●〇□□ □◎●〇●〇□□
    # □□□●〇●□□ □□□〇〇□□□ □□□●●●□□ □●□●●□□□
    # □□●◎□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000180810080000, 0x000000342C142000): (3, 6),
    ('black', 0x0000100810180000, 0x000428342C000000): (4, 1),
    ('black', 0x0000002834000000, 0x00001A14081C0000): (6, 3),
    ('black', 0x0000002C14000000, 0x0000381028580000): (1, 4),
    #---------------------------------------------------------------------
    # 12手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□〇●□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇□□□ □□●〇〇◎□□ □□□●●◎●□ □□●●●□□□
    # □□●●〇●□□ □□●●〇●□□ □□〇●〇〇〇□ □□〇●〇〇□□
    # □□●〇●●□□ □□●〇●●□□ □□〇〇●〇□□ □〇〇〇●〇□□
    # □□◎〇〇●□□ □□□〇〇□□□ □□□●●●□□ □●◎●●□□□
    # □□●〇□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000180810181000, 0x000000342C042000): (2, 5),
    ('white', 0x0008180810180000, 0x000420342C000000): (5, 2),
    ('white', 0x0000002E34000000, 0x00001A10081C0000): (5, 2),
    ('white', 0x0000002C74000000, 0x0000381008580000): (2, 5),
    #---------------------------------------------------------------------
    # 13手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□〇●□□ □□□□□□□□ □□□◎□□□□
    # □□□〇〇□□□ □□●●●●□□ □□□●●●●□ □□●●●□□□
    # □□●●〇●□□ □◎●●〇●□□ □□〇●〇●〇□ □□●●〇〇□□
    # □□●〇●●◎□ □□●〇●●□□ □□〇〇●●□□ □〇●〇●〇□□
    # □□●●●●□□ □□□〇〇□□□ □□□●●●□□ □●●●●□□□
    # □□●〇□□□□ □□□□□□□□ □□□□◎□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000180810001000, 0x000000342C3C2000): (6, 4),
    ('black', 0x0008000810180000, 0x00043C342C000000): (1, 3),
    ('black', 0x0000002A30000000, 0x00001E140C1C0000): (4, 6),
    ('black', 0x0000000C54000000, 0x0000383028780000): (3, 1),
    #---------------------------------------------------------------------
    # 14手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□〇●□□ □□□□□□□□ □□□〇□◎□□
    # □□□〇〇□◎□ □□●●●●□□ □□□●●●●□ □□●〇〇□□□
    # □□●●〇〇□□ □〇〇〇〇●□□ □□〇●〇●〇□ □□●〇〇〇□□
    # □□●〇〇〇〇□ □□〇〇●●□□ □□〇〇〇●□□ □〇●〇●〇□□
    # □□●●●●□□ □◎□〇〇□□□ □□□〇〇●□□ □●●●●□□□
    # □□●〇□□□□ □□□□□□□□ □□◎□〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000180C1E001000, 0x00000030203C2000): (6, 2),
    ('white', 0x0008007830180000, 0x00043C040C000000): (1, 5),
    ('white', 0x0000002A38180800, 0x00001E1404040000): (2, 6),
    ('white', 0x0010181C54000000, 0x0000202028780000): (5, 1),
    #---------------------------------------------------------------------
    # 15手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□〇●□□ □□□□□□□□ □□□〇□●□□
    # □□□〇〇◎●□ □□●●●●□□ □□□●●●●□ □□●〇●◎□□
    # □□●●〇●□□ □〇〇●〇●□□ □□〇●〇●〇□ □□●●〇〇□□
    # □□●〇●〇〇□ □□●〇●●□□ □□〇〇●●□□ □〇●〇●〇□□
    # □□●●●●□□ □●◎〇〇□□□ □□◎●〇●□□ □●●●●□□□
    # □□●〇□□□□ □□□□□□□□ □□●□〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000180816001000, 0x00000234283C2000): (5, 2),
    ('black', 0x0008006810180000, 0x00043C142C400000): (2, 5),
    ('black', 0x0000002A30080800, 0x00001E140C142000): (2, 5),
    ('black', 0x0010100C54000000, 0x0004283028780000): (5, 2),
    #---------------------------------------------------------------------
    # 16手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□◎□□□□ □□□□〇●□□ □□□□□□□□ □□□〇□●□□
    # □□□〇〇〇●□ □□●●●●□□ □□□●●●●□ □□●〇〇〇□□
    # □□●●〇〇□□ □〇〇●〇●□□ □◎〇●〇●〇□ □□●●〇〇□□
    # □□●〇●〇〇□ □□〇〇●●□□ □□〇〇●●□□ □〇●〇●〇◎□
    # □□●●●●□□ □●〇〇〇□□□ □□〇〇〇●□□ □●●●●□□□
    # □□●〇□□□□ □□□□◎□□□ □□●□〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x00001C0C16001000, 0x00000230283C2000): (3, 1),
    ('white', 0x0008006830380000, 0x00043C140C400000): (4, 6),
    ('white', 0x0000002A30380800, 0x00001E140C042000): (1, 3),
    ('white', 0x00101C0C54000000, 0x0004203028780000): (6, 4),
    #---------------------------------------------------------------------
    # 17手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□◎●□□□□ □□□□〇●□□ □□□□□□□□ □□□〇□●□□
    # □□□●〇〇●□ □□●●●●□□ □◎□●●●●□ □□●〇〇〇□□
    # □□●●〇〇□□ □〇〇●〇●□□ □●●●〇●〇□ □□●●〇〇□□
    # □□●〇●〇〇□ □□〇〇●●□□ □□〇〇●●□□ □〇●〇●●●□
    # □□●●●●□□ □●〇〇●□□□ □□〇〇〇●□□ □●●●●□◎□
    # □□●〇□□□□ □□□□●◎□□ □□●□〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x00000C0C16001000, 0x00101230283C2000): (2, 1),
    ('black', 0x0008006830300000, 0x00043C140C480800): (5, 6),
    ('black', 0x0000000A30380800, 0x00001E740C042000): (1, 2),
    ('black', 0x00101C0C50000000, 0x000420302E780000): (6, 5),
    #---------------------------------------------------------------------
    # 18手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□〇●□□□□ □□□◎〇●□□ □□□□□□□□ □□□〇□●□□
    # □□□〇〇〇●□ □□●●●●□□ □〇□●●●●□ □□●〇〇〇□□
    # □□●●〇〇□□ □〇〇●〇●□□ □●〇●〇●〇□ □◎●●〇〇□□
    # □□●〇●〇〇□ □□〇〇●●□□ □□〇〇●●◎□ □〇●〇●〇●□
    # □□●●●●□□ □●〇〇〇□□□ □□〇〇〇●□□ □●●●●□〇□
    # □□●〇◎□□□ □□□□●〇□□ □□●□〇□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x00201C0C16001000, 0x00100230283C2000): (4, 6),
    ('white', 0x0008006830380400, 0x00043C140C400800): (3, 1),
    ('white', 0x0000402A30380800, 0x00001E540C042000): (6, 4),
    ('white', 0x00101C0C54020000, 0x000420302A780000): (1, 3),
}

# 猫定石
CAT = {
    #---------------------------------------------------------------------
    # 3手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□●□□□ □□□◎□□□□ □□□〇□□□□
    # □□◎〇〇□□□ □□〇〇●□□□ □□□〇●●□□ □□□〇〇□□□
    # □□□●〇〇□□ □□□〇〇◎□□ □□□〇〇□□□ □□●●〇□□□
    # □□□●□□□□ □□□□□□□□ □□□□〇□□□ □□□□◎□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000080C000000, 0x0000001010100000): (2, 3),
    ('black', 0x0000003010000000, 0x0000080808000000): (5, 4),
    ('black', 0x0000000018080000, 0x0000001C00000000): (3, 2),
    ('black', 0x0000101800000000, 0x0000000038000000): (4, 5),
    #---------------------------------------------------------------------
    # 4手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□◎□□□□ □□□□●□□□ □□□〇□□□□ □□□〇□□□□
    # □□〇〇〇□□□ □□〇〇●□□□ □□◎〇●●□□ □□□〇〇□□□
    # □□□●〇〇□□ □□□〇〇〇□□ □□□〇〇□□□ □□●●〇◎□□
    # □□□●□□□□ □□□□◎□□□ □□□□〇□□□ □□□□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000380C000000, 0x0000000010100000): (3, 2),
    ('white', 0x000000301C000000, 0x0000080800000000): (4, 5),
    ('white', 0x0000101018080000, 0x0000000C00000000): (2, 3),
    ('white', 0x0000101808080000, 0x0000000030000000): (5, 4),
    #---------------------------------------------------------------------
    # 5手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●□□□□ □□□□●□□□ □□□〇◎□□□ □□□〇□□□□
    # □□〇●〇□□□ □□〇〇●◎□□ □□●●●●□□ □□□〇〇□□□
    # □□◎●〇〇□□ □□□〇●〇□□ □□□〇〇□□□ □□●●●●□□
    # □□□●□□□□ □□□□●□□□ □□□□〇□□□ □□□◎〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000280C000000, 0x0000101010100000): (2, 4),
    ('black', 0x0000003014000000, 0x0000080808080000): (5, 3),
    ('black', 0x0000100018080000, 0x0000003C00000000): (4, 2),
    ('black', 0x0000101800080000, 0x000000003C000000): (3, 5),
    #---------------------------------------------------------------------
    # 6手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●□□□□ □□□□●□□□ □□□〇〇□□□ □□□〇◎□□□
    # □□〇●〇◎□□ □□〇〇〇〇□□ □□●●〇●□□ □□□〇〇□□□
    # □□〇〇〇〇□□ □□◎〇●〇□□ □□□〇〇□□□ □□●〇●●□□
    # □□□●□□□□ □□□□●□□□ □□□◎〇□□□ □□□〇〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000283C000000, 0x0000101000100000): (5, 3),
    ('white', 0x0000003C14000000, 0x0000080008080000): (2, 4),
    ('white', 0x0000180818080000, 0x0000003400000000): (3, 5),
    ('white', 0x0000101810180000, 0x000000002C000000): (4, 2),
    #---------------------------------------------------------------------
    # 7手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●◎□□□ □□□□●□□□ □□□〇〇□□□ □□□〇●□□□
    # □□〇●●●□□ □□〇●〇〇□□ □□●●〇●□□ □□□●●◎□□
    # □□〇〇●〇□□ □□●●●〇□□ □□◎●●□□□ □□●〇●●□□
    # □□□●□□□□ □□□◎●□□□ □□□●〇□□□ □□□〇〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000002034000000, 0x0000101C08100000): (4, 2),
    ('black', 0x0000002C04000000, 0x0000081038080000): (3, 5),
    ('black', 0x0000180800080000, 0x0000003418100000): (2, 4),
    ('black', 0x0000100010180000, 0x000008182C000000): (5, 3),
    #---------------------------------------------------------------------
    # 8手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●〇◎□□ □□□□●□□□ □□□〇〇□□□ □□□〇●◎□□
    # □□〇〇●●□□ □□〇●〇〇□□ □□●〇〇●□□ □□□●●〇□□
    # □□〇〇●〇□□ □□●●〇〇□□ □□〇●●□□□ □□●〇〇●□□
    # □□□●□□□□ □□◎〇●□□□ □□◎●〇□□□ □□□〇〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0000083034000000, 0x0000100C08100000): (5, 2),
    ('white', 0x0000002C0C100000, 0x0000081030080000): (2, 5),
    ('white', 0x0000181820080000, 0x0000002418100000): (2, 5),
    ('white', 0x0000100418180000, 0x0000081824000000): (5, 2),
    #---------------------------------------------------------------------
    # 9手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□◎□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●●●□□ □□□□●□□□ □□□〇〇□□□ □□□〇●●□□
    # □□〇〇●●□□ □□〇●〇〇□□ □□●〇〇●□□ □□□●●●◎□
    # □□〇〇●〇□□ □□●●〇〇□□ □◎●●●□□□ □□●〇〇●□□
    # □□□●□□□□ □□●●●□□□ □□●●〇□□□ □□□〇〇□□□
    # □□□□□□□□ □□□◎□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000003034000000, 0x00001C0C08100000): (4, 1),
    ('black', 0x0000002C0C000000, 0x0000081030380000): (3, 6),
    ('black', 0x0000181800080000, 0x0000002438300000): (1, 4),
    ('black', 0x0000100018180000, 0x00000C1C24000000): (6, 3),
    #---------------------------------------------------------------------
    # 10手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇●●□□ □□□□●◎□□ □□□〇〇◎□□ □□□〇●●□□
    # □□〇〇●●□□ □□〇●〇〇□□ □□〇〇〇●□□ □□□●●●〇□
    # □□〇〇●〇□□ □□●●〇〇□□ □〇●●●□□□ □□●〇〇〇□□
    # □□◎●□□□□ □□●●〇□□□ □□●●〇□□□ □□◎〇〇□□□
    # □□□□□□□□ □□□〇□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0008103034000000, 0x00000C0C08100000): (2, 5),
    ('white', 0x0000002C0C081000, 0x0000081030300000): (5, 2),
    ('white', 0x0000183840080000, 0x0000000438300000): (5, 2),
    ('white', 0x000010021C180000, 0x00000C1C20000000): (2, 5),
    #---------------------------------------------------------------------
    # 11手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇●●□□ □□□◎●●□□ □□□〇〇●□□ □□□〇●●□□
    # □□〇〇●●□□ □□〇●●〇□□ □□〇〇●●□□ □□◎●●●〇□
    # □□〇●●〇□□ □□●●〇〇□□ □〇●●●◎□□ □□●●〇〇□□
    # □□●●◎□□□ □□●●〇□□□ □□●●〇□□□ □□●〇〇□□□
    # □□□□□□□□ □□□〇□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0008103024000000, 0x00000C0C18300000): (4, 5),
    ('black', 0x000000240C081000, 0x00000C1830300000): (3, 2),
    ('black', 0x0000183040080000, 0x0000040C38300000): (5, 4),
    ('black', 0x000010020C180000, 0x00000C1C30200000): (2, 3),
    #---------------------------------------------------------------------
    # 12手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇●□□ □□◎〇●●□□ □□□〇〇●□□ □□◎〇●●□□
    # □□〇〇〇●□□ □□〇〇〇〇□□ □□〇〇〇●□□ □□〇〇〇〇〇□
    # □□〇〇〇〇□□ □□●〇〇〇□□ □〇〇〇〇〇□□ □□●〇〇〇□□
    # □□●●〇◎□□ □□●〇〇□□□ □□●●〇◎□□ □□●〇〇□□□
    # □□□□□□□□ □□□〇□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000818383C080000, 0x0000040400300000): (5, 5),
    ('white', 0x0000103C1C181000, 0x00000C0020200000): (2, 2),
    ('white', 0x000018387C080000, 0x0000040400300000): (5, 5),
    ('white', 0x0000103E1C180000, 0x00000C0020200000): (2, 2),
    #---------------------------------------------------------------------
    # 13手目(最善型)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□□□◎□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇●□□ □□●●●●□□ □□□〇〇●□□ □□●●●●□□
    # □□〇〇〇●□□ □□●〇〇〇□□ □□〇〇〇●◎□ □□●〇〇〇〇□
    # □□〇〇〇●□□ □□●〇〇〇□□ □〇〇〇〇●□□ □◎●〇〇〇□□
    # □□●●●●□□ □□●〇〇□□□ □□●●●●□□ □□●〇〇□□□
    # □□□◎□□□□ □□□〇□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0008183838000000, 0x00000404043C0000): (3, 6),
    ('black', 0x0000001C1C181000, 0x00003C2020200000): (4, 1),
    ('black', 0x0000183878000000, 0x00000404043C0000): (6, 3),
    ('black', 0x0000001E1C180000, 0x00003C2020200000): (1, 4),
    #---------------------------------------------------------------------
    # 14手目(最善型)
    # □□□□□□□□ □□□□□◎□□ □□□□□□□□ □□□□□□□□
    # □□□□〇□□□ □□□□〇□□□ □□□□□□□□ □□□□□□□□
    # □□□〇〇●□□ □□●●〇●□□ □□□〇〇●□◎ □□●●●●□□
    # □□〇〇〇●□□ □□●〇〇〇□□ □□〇〇〇〇〇□ □□●〇〇〇〇□
    # □□〇〇〇●□□ □□●〇〇〇□□ □〇〇〇〇●□□ □〇〇〇〇〇□□
    # □□●〇●●□□ □□●〇〇□□□ □□●●●●□□ ◎□●〇〇□□□
    # □□□〇□□□□ □□□〇□□□□ □□□□□□□□ □□□□□□□□
    # □□◎□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x0008183838101000, 0x00000404042C0000): (2, 7),
    ('white', 0x0008081C1C181000, 0x0000342020200000): (5, 0),
    ('white', 0x0000183E78000000, 0x00000400043C0000): (7, 2),
    ('white', 0x0000001E7C180000, 0x00003C2000200000): (0, 5),
}

# 羊定石
SHEEP = {
    #---------------------------------------------------------------------
    # 5手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●□□□□ □□□◎●□□□ □□□〇□□□□ □□□〇□□□□
    # □□〇●〇□□□ □□〇〇●□□□ □□●●●●□□ □□◎〇〇□□□
    # □□□●〇〇□□ □□□〇●〇□□ □□□〇〇◎□□ □□●●●●□□
    # □□□●◎□□□ □□□□●□□□ □□□□〇□□□ □□□□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000280C000000, 0x0000101010100000): (4, 5),
    ('black', 0x0000003014000000, 0x0000080808080000): (3, 2),
    ('black', 0x0000100018080000, 0x0000003C00000000): (5, 4),
    ('black', 0x0000101800080000, 0x000000003C000000): (2, 3),
    #---------------------------------------------------------------------
    # 6手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●□□□□ □□□〇●□□□ □□□〇□□□□ □□□〇◎□□□
    # □□〇●〇◎□□ □□〇〇〇□□□ □□●●〇●□□ □□〇〇〇□□□
    # □□□〇〇〇□□ □□◎〇●〇□□ □□□〇〇〇□□ □□●〇●●□□
    # □□□●〇□□□ □□□□●□□□ □□□◎〇□□□ □□□□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000281C080000, 0x0000101000100000): (5, 3),
    ('white', 0x0000103814000000, 0x0000080008080000): (2, 4),
    ('white', 0x000010081C080000, 0x0000003400000000): (3, 5),
    ('white', 0x0000103810080000, 0x000000002C000000): (4, 2),
    #---------------------------------------------------------------------
    # 7手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●◎□□□ □□□〇●□□□ □□□〇□□□□ □□□〇●□□□
    # □□〇●●●□□ □□〇●〇□□□ □□●●〇●□□ □□〇●●◎□□
    # □□□〇●〇□□ □□●●●〇□□ □□◎●●〇□□ □□●〇●●□□
    # □□□●〇□□□ □□□◎●□□□ □□□●〇□□□ □□□□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000002014080000, 0x0000101C08100000): (4, 2),
    ('black', 0x0000102804000000, 0x0000081038080000): (3, 5),
    ('black', 0x0000100804080000, 0x0000003418100000): (2, 4),
    ('black', 0x0000102010080000, 0x000008182C000000): (5, 3),
    #---------------------------------------------------------------------
    # 8手目(基本形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●〇◎□□ □□□〇●□□□ □□□〇□□□□ □□□〇●◎□□
    # □□〇●〇●□□ □□〇〇〇□□□ □□●●〇●□□ □□〇〇〇〇□□
    # □□□〇〇〇□□ □□●〇●〇□□ □□〇〇〇〇□□ □□●〇●●□□
    # □□□●〇□□□ □□◎〇●□□□ □□◎●〇□□□ □□□□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000008281C080000, 0x0000101400100000): (5, 2),
    ('white', 0x0000103814100000, 0x0000080028080000): (2, 5),
    ('white', 0x000010083C080000, 0x0000003400100000): (2, 5),
    ('white', 0x0000103C10080000, 0x000008002C000000): (5, 2),
    #---------------------------------------------------------------------
    # 9手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●●●□□ □□□〇●◎□□ □□□〇□◎□□ □□□〇●●□□
    # □□〇●〇●□□ □□〇〇〇□□□ □□●●〇●□□ □□〇〇〇●□□
    # □□□〇〇〇□□ □□●〇●〇□□ □□●〇〇〇□□ □□●〇●●□□
    # □□◎●〇□□□ □□●●●□□□ □□●●〇□□□ □□◎□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000281C080000, 0x00001C1400100000): (2, 5),
    ('black', 0x0000103814000000, 0x0000080028380000): (5, 2),
    ('black', 0x000010081C080000, 0x0000003420300000): (5, 2),
    ('black', 0x0000103810080000, 0x00000C042C000000): (2, 5),
    #---------------------------------------------------------------------
    # 10手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□●●●□□ □□◎〇〇〇□□ □□□〇□〇□□ □□◎〇●●□□
    # □□〇●〇●□□ □□〇〇〇□□□ □□●●〇〇□□ □□〇〇〇●□□
    # □□□〇〇〇□□ □□●〇●〇□□ □□●〇〇〇□□ □□〇〇●●□□
    # □□〇〇〇◎□□ □□●●●□□□ □□●●〇◎□□ □□〇□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000281C380000, 0x00001C1400000000): (5, 5),
    ('white', 0x00001C3814000000, 0x0000000028380000): (2, 2),
    ('white', 0x0000140C1C080000, 0x0000003020300000): (5, 5),
    ('white', 0x0000103830280000, 0x00000C040C000000): (2, 2),
    #---------------------------------------------------------------------
    # 11手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□◎□□□□
    # □□□●●●□□ □□●〇〇〇□□ □□□〇□〇□□ □□●●●●□□
    # □□〇●〇●□□ □◎●●〇□□□ □□●●〇〇□□ □□〇●〇●□□
    # □□□〇●●◎□ □□●〇●〇□□ □□●〇●〇□□ □□〇〇●●□□
    # □□〇〇〇●□□ □□●●●□□□ □□●●●●□□ □□〇□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□◎□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x0000002810380000, 0x00001C140C040000): (6, 4),
    ('black', 0x00001C0814000000, 0x0000203028380000): (1, 3),
    ('black', 0x0000140C14000000, 0x00000030283C0000): (4, 6),
    ('black', 0x0000002830280000, 0x00003C140C000000): (3, 1),
    #---------------------------------------------------------------------
    # 12手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□◎〇□□□□
    # □□□●●●□□ □◎●〇〇〇□□ □□□〇□〇□□ □□●〇●●□□
    # □□〇●〇●□□ □〇〇〇〇□□□ □□●●〇〇□□ □□〇〇〇●□□
    # □□□〇〇〇〇□ □□●〇●〇□□ □□●〇〇〇□□ □□〇〇●●□□
    # □□〇〇〇●◎□ □□●●●□□□ □□●●〇●□□ □□〇□〇□□□
    # □□□□□□□□ □□□□□□□□ □□□□〇◎□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('white', 0x000000281E380000, 0x00001C1400040000): (6, 5),
    ('white', 0x00001C7814000000, 0x0000200028380000): (1, 2),
    ('white', 0x0000140C1C080800, 0x0000003020340000): (5, 6),
    ('white', 0x0010103830280000, 0x00002C040C000000): (2, 1),
    #---------------------------------------------------------------------
    # 13手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●〇□□□□
    # □□◎●●●□□ □●●〇〇〇□□ □□◎〇□〇□□ □□●●●●□□
    # □□〇●●●□□ □〇●〇〇□□□ □□●●〇〇□□ □□〇〇●●□□
    # □□□〇〇●〇□ □□●●●〇□□ □□●●〇〇□□ □□〇〇●●□□
    # □□〇〇〇●●□ □□●●●◎□□ □□●●●●□□ □□〇□〇◎□□
    # □□□□□□□□ □□□□□□□□ □□□□〇●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□□□□□□□
    ('black', 0x000000201A380000, 0x00001C1C04060000): (2, 2),
    ('black', 0x00001C5804000000, 0x0000602038380000): (5, 5),
    ('black', 0x0000140C0C000800, 0x00000030303C0400): (2, 2),
    ('black', 0x0010003030280000, 0x00203C0C0C000000): (5, 5),
    #---------------------------------------------------------------------
    # 14手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□◎□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●〇□□□□
    # □□〇●●●□□ ◎●●〇〇〇□□ □□〇〇□〇□□ □□●●●●□□
    # □□〇〇●●□□ □〇●〇〇□□□ □□●〇〇〇□□ □□〇〇●●□□
    # □□□〇〇●〇□ □□●●〇〇□□ □□●●〇〇□□ □□〇〇〇●□□
    # □□〇〇〇●●◎ □□●●●〇□□ □□●●●●□□ □□〇□〇〇□□
    # □□□□□□□□ □□□□□□□□ □□□□〇●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□◎□□ □□□□□□□□
    ('white', 0x000020301A380000, 0x00001C0C04060000): (7, 5),
    ('white', 0x00001C580C040000, 0x0000602030380000): (0, 2),
    ('white', 0x0000341C0C000800, 0x00000020303C0400): (5, 7),
    ('white', 0x00100030382C0000, 0x00203C0C04000000): (2, 0),
    #---------------------------------------------------------------------
    # 15手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●●◎□□□
    # □□〇●●●□□ ●●●〇〇〇□□ □□〇〇□〇□□ □□●●●●□□
    # □□〇〇●●◎□ □●●〇〇□□□ □□●〇〇〇□□ □□〇〇●●□□
    # □□□〇〇●●□ □◎●●〇〇□□ □□●●〇〇□□ □□〇〇〇●□□
    # □□〇〇〇●●● □□●●●〇□□ □□●●●●□□ □□〇□〇〇□□
    # □□□□□□□□ □□□□□□□□ □□□◎●●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□●□□ □□□□□□□□
    ('black', 0x0000203018380000, 0x00001C0C06070000): (6, 3),
    ('black', 0x00001C180C040000, 0x0000E06030380000): (1, 4),
    ('black', 0x0000341C0C000000, 0x00000020303C0C04): (3, 6),
    ('black', 0x00000030382C0000, 0x20303C0C04000000): (4, 1),
    #---------------------------------------------------------------------
    # 16手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●◎□□□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●●〇□□□
    # □□〇●●●□□ ●●●〇〇〇□□ □□〇〇□〇□□ □□●〇〇●□□
    # □□〇〇〇〇〇□ ◎●〇〇〇□□□ □□●〇〇〇□□ □□〇〇〇●□□
    # □□□〇〇〇●◎ □〇〇〇〇〇□□ □□●〇〇〇□□ □□〇〇〇●□□
    # □□〇〇〇●●● □□●●●〇□□ □□●〇〇●□□ □□〇□〇〇□□
    # □□□□□□□□ □□□□□□□□ □□□〇●●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□□□◎●□□ □□□□□□□□
    ('white', 0x0000203E1C380000, 0x00001C0002070000): (7, 4),
    ('white', 0x00001C387C040000, 0x0000E04000380000): (0, 3),
    ('white', 0x0000341C1C181000, 0x0000002020240C04): (4, 7),
    ('white', 0x00081838382C0000, 0x2030240404000000): (3, 0),
    #---------------------------------------------------------------------
    # 17手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●●□◎□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●●●□□□
    # □□〇●●●□◎ ●●●〇〇〇□□ □□〇〇□〇□□ □□●〇〇●□□
    # □□〇〇〇〇●□ ●●〇〇〇□□□ □□●〇〇〇□□ □□〇〇〇●□□
    # □□□〇〇〇●● □●〇〇〇〇□□ □□●〇〇〇□□ □□〇〇〇●□□
    # □□〇〇〇●●● ◎□●●●〇□□ □□●〇〇●□□ □□〇□〇〇□□
    # □□□□□□□□ □□□□□□□□ □□□●●●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□◎□●●□□ □□□□□□□□
    ('black', 0x0000203C1C380000, 0x00001C0203070000): (7, 2),
    ('black', 0x00001C383C040000, 0x0000E0C040380000): (0, 5),
    ('black', 0x0000341C1C180000, 0x0000002020241C0C): (2, 7),
    ('black', 0x00001838382C0000, 0x3038240404000000): (5, 0),
    #---------------------------------------------------------------------
    # 18手目(最善形)
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●●□〇□□
    # □□□□□□□□ □□□□□□□□ □□□□□□□□ □□●●〇□□□
    # □□〇●●●□〇 ●●●〇〇〇□□ □□〇〇◎〇□□ □□●〇〇●□□
    # □□〇〇〇〇〇□ ●●〇〇〇◎□□ □□●〇〇〇□□ □□〇〇〇●□□
    # □□◎〇〇〇●● □〇〇〇〇〇□□ □□●〇〇〇□□ □□〇〇〇●□□
    # □□〇〇〇●●● 〇□●●●〇□□ □□●〇〇●□□ □□〇◎〇〇□□
    # □□□□□□□□ □□□□□□□□ □□□〇●●□□ □□□□□□□□
    # □□□□□□□□ □□□□□□□□ □□〇□●●□□ □□□□□□□□
    ('white', 0x0000213E1C380000, 0x00001C0003070000): (2, 4),
    ('white', 0x00001C387C840000, 0x0000E0C000380000): (5, 3),
    ('white', 0x0000341C1C181020, 0x0000002020240C0C): (4, 2),
    ('white', 0x04081838382C0000, 0x3030240404000000): (3, 5),
}
# ===== 定石リスト =====


class Joseki(AbstractStrategy):
    """
    定石通りに打つ(8x8限定)
    """
    def __init__(self, base):
        self.joseki = {}
        self.base = base

    @Measure.time
    def next_move(self, color, board):
        """
        次の一手
        """
        if board.size == 8:
            bitboard_b, bitboard_w = board.get_bitboard_info()
            key = (color, bitboard_b, bitboard_w)

            # 定石リストに手が含まれる場合
            if key in self.joseki:
                return self.joseki[key]

        return self.base.next_move(color, board)


class Usagi(Joseki):
    """
    兎
    """
    def __init__(self, base):
        self.joseki = {}
        self.base = base

        # 定石のロード
        self.joseki.update(MOUSE)      # 鼠定石
        self.joseki.update(BULL)       # 牛定石
        self.joseki.update(TIGER)      # 虎定石
        self.joseki.update(SROSE)      # Sローズ基本形
        self.joseki.update(ROSEVILLE)  # ローズビル基本形
        self.joseki.update(FASTBOAT)   # 快速船基礎形
        self.joseki.update(CAT)        # 猫定石

        # 最後にロード
        self.joseki.update(RABBIT)     # 兎定石


class Tora(Joseki):
    """
    虎
    """
    def __init__(self, base):
        self.joseki = {}
        self.base = base

        # 定石のロード
        self.joseki.update(MOUSE)      # 鼠定石
        self.joseki.update(BULL)       # 牛定石
        self.joseki.update(RABBIT)     # 兎定石
        self.joseki.update(SROSE)      # Sローズ基本形
        self.joseki.update(ROSEVILLE)  # ローズビル基本形
        self.joseki.update(FASTBOAT)   # 快速船基礎形
        self.joseki.update(CAT)        # 猫定石

        # 最後にロード
        self.joseki.update(TIGER)      # 虎定石


class Ushi(Joseki):
    """
    牛
    """
    def __init__(self, base):
        self.joseki = {}
        self.base = base

        # 定石のロード
        self.joseki.update(RABBIT)     # 兎定石
        self.joseki.update(CAT)        # 猫定石
        self.joseki.update(TIGER)      # 虎定石
        self.joseki.update(MOUSE)      # 鼠定石
        self.joseki.update(SROSE)      # Sローズ基本形
        self.joseki.update(ROSEVILLE)  # ローズビル基本形
        self.joseki.update(FASTBOAT)   # 快速船基礎形

        # 最後にロード
        self.joseki.update(BULL)       # 牛定石


class Nezumi(Joseki):
    """
    鼠
    """
    def __init__(self, base):
        self.joseki = {}
        self.base = base

        # 定石のロード
        self.joseki.update(RABBIT)     # 兎定石
        self.joseki.update(CAT)        # 猫定石
        self.joseki.update(TIGER)      # 虎定石
        self.joseki.update(BULL)       # 牛定石
        self.joseki.update(SROSE)      # Sローズ基本形
        self.joseki.update(ROSEVILLE)  # ローズビル基本形
        self.joseki.update(FASTBOAT)   # 快速船基礎形

        # 最後にロード
        self.joseki.update(MOUSE)      # 鼠定石


class Neko(Joseki):
    """
    猫
    """
    def __init__(self, base):
        self.joseki = {}
        self.base = base

        # 定石のロード
        self.joseki.update(BULL)       # 牛定石
        self.joseki.update(MOUSE)      # 鼠定石
        self.joseki.update(RABBIT)     # 兎定石
        self.joseki.update(TIGER)      # 虎定石
        self.joseki.update(SROSE)      # Sローズ基本形
        self.joseki.update(ROSEVILLE)  # ローズビル基本形
        self.joseki.update(FASTBOAT)   # 快速船基礎形
        self.joseki.update(SHEEP)      # 羊定石

        # 最後にロード
        self.joseki.update(CAT)        # 猫定石


class Hitsuji(Joseki):
    """
    羊
    """
    def __init__(self, base):
        self.joseki = {}
        self.base = base

        # 定石のロード
        self.joseki.update(BULL)       # 牛定石
        self.joseki.update(MOUSE)      # 鼠定石
        self.joseki.update(RABBIT)     # 兎定石
        self.joseki.update(TIGER)      # 虎定石
        self.joseki.update(SROSE)      # Sローズ基本形
        self.joseki.update(ROSEVILLE)  # ローズビル基本形
        self.joseki.update(FASTBOAT)   # 快速船基礎形
        self.joseki.update(CAT)        # 猫定石

        # 最後にロード
        self.joseki.update(SHEEP)      # 羊定石


class AlphaBeta4J_TPW(Usagi):
    """
    AlphaBeta法で4手先読みして次の手を決める+定石打ち
    (評価関数:TPW, 完全読み開始:残り9手)
    """
    def __init__(self, base=AlphaBeta4_TPW()):
        super().__init__(base)


class AlphaBeta4F9J_TPW(Tora):
    """
    AlphaBeta法で4手先読みして次の手を決める+定石打ち
    (評価関数:TPW, 完全読み開始:残り9手)
    """
    def __init__(self, base=AlphaBeta4F9_TPW()):
        super().__init__(base)


class AbIF9J_B_TPW(Nezumi):
    """
    AlphaBeta法に反復深化法を適用して次の手を決める+定石打ち
    (選択的探索:なし、並べ替え:B、評価関数:TPW, 完全読み開始:残り9手)
    """
    def __init__(self, base=AbIF9_B_TPW()):
        super().__init__(base)


class AbIF9J_B_TPWE(Ushi):
    """
    AlphaBeta法に反復深化法を適用して次の手を決める+定石打ち
    (選択的探索:なし、並べ替え:B、評価関数:TPWE, 完全読み開始:残り9手)
    """
    def __init__(self, base=AbIF9_B_TPWE()):
        super().__init__(base)


class AbIF9J_B_TPWEC(Hitsuji):
    """
    AlphaBeta法に反復深化法を適用して次の手を決める+定石打ち
    (選択的探索:なし、並べ替え:B、評価関数:TPWEC, 完全読み開始:残り9手)
    """
    def __init__(self, base=AbIF9_B_TPWEC()):
        super().__init__(base)


class NsIF9J_B_TPW(Ushi):
    """
    NegaScout法に反復深化法を適用して次の手を決める+定石打ち
    (選択的探索:なし、並べ替え:B、評価関数:TPW, 完全読み開始:残り9手)
    """
    def __init__(self, base=NsIF9_B_TPW()):
        super().__init__(base)


class NsIF9J_B_TPW2(Ushi):
    """
    NegaScout法に反復深化法を適用して次の手を決める+定石打ち
    (選択的探索:なし、並べ替え:B、評価関数:TPW, 完全読み開始:残り9手)
    """
    def __init__(self, base=NsIF9_B_TPW2()):
        super().__init__(base)


class NsIF9J_B_TPWE(Nezumi):
    """
    NegaScout法に反復深化法を適用して次の手を決める+定石打ち
    (選択的探索:なし、並べ替え:B、評価関数:TPWE, 完全読み開始:残り9手)
    """
    def __init__(self, base=NsIF9_B_TPWE()):
        super().__init__(base)


class SwitchNsIF9J_B_TPW(Nezumi):
    """
    SwitchNsIF9_B_TPW+定石打ち
    (完全読み開始:残り9手)
    """
    def __init__(self, base=SwitchNsIF9_B_TPW()):
        super().__init__(base)


class SwitchNsIF9J_B_TPWE(Neko):
    """
    SwitchNsIF9_B_TPWE+定石打ち
    (完全読み開始:残り9手)
    """
    def __init__(self, base=SwitchNsIF9_B_TPWE()):
        super().__init__(base)


if __name__ == '__main__':
    from board import BitBoard

    def rotate_180(bbits, wbits, move): # 180°回転
        bbits_tmp = [['0' for i in range(8)] for j in range(8)]
        wbits_tmp = [['0' for i in range(8)] for j in range(8)]

        check = 1 << 63
        for y in range(8):
            for x in range(8):
                if bbits & check:
                    bbits_tmp[y][x] = '1'
                if wbits & check:
                    wbits_tmp[y][x] = '1'
                check >>= 1

        import numpy as np

        bbits_tmp = np.rot90(np.rot90(np.array(bbits_tmp)))
        wbits_tmp = np.rot90(np.rot90(np.array(wbits_tmp)))
        bbits = int(''.join(bbits_tmp.flatten()), 2)
        wbits = int(''.join(wbits_tmp.flatten()), 2)
        move = 7 - move[0], 7 - move[1]

        return bbits, wbits, move

    def delta_swap(bits, mask, delta):
        x = (bits ^ (bits >> delta)) & mask
        return bits ^ x ^ (x << delta)

    def flip_diag(bbits, wbits, move): # 対角線を軸に反転
        bbits = delta_swap(bbits, 0x00000000F0F0F0F0, 28)
        bbits = delta_swap(bbits, 0x0000CCCC0000CCCC, 14)
        bbits = delta_swap(bbits, 0x00AA00AA00AA00AA,  7)
        wbits = delta_swap(wbits, 0x00000000F0F0F0F0, 28)
        wbits = delta_swap(wbits, 0x0000CCCC0000CCCC, 14)
        wbits = delta_swap(wbits, 0x00AA00AA00AA00AA,  7)
        move = move[1], move[0]
        return bbits, wbits, move

    def rotate_flip(color, b, w, move):
        print(f"    ('{color}', 0x{b:016X}, 0x{w:016X}): {move},")
        b2, w2, move2 = rotate_180(b, w, move)
        print(f"    ('{color}', 0x{b2:016X}, 0x{w2:016X}): {move2},")
        b3, w3, move3 = flip_diag(b, w, move)
        print(f"    ('{color}', 0x{b3:016X}, 0x{w3:016X}): {move3},")
        b4, w4, move4 = flip_diag(b2, w2, move2)
        print(f"    ('{color}', 0x{b4:016X}, 0x{w4:016X}): {move4},")

    #--------------------------------------------
    # 兎定石
    print('--- Test For Usagi Strategy ---')
    joseki = AlphaBeta4J_TPW()

    bitboard8 = BitBoard()
    print(bitboard8)

    # 1手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 2手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 3手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 4手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 5手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # Sローズ基本形
    # 6手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 7手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (3, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 8手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 9手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 10手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 6)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 11手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (6, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 12手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    #--------------------------------------------
    # 虎定石
    print('--- Test For Tora Strategy ---')
    joseki = AlphaBeta4F9J_TPW()

    bitboard8 = BitBoard()
    print(bitboard8)

    # 1手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 2手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 3手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # ローズビル基本形
    # 4手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 2)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 5手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 3)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 6手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 7手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 8手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (1, 2)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 9手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 1)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    #--------------------------------------------
    # 牛定石
    print('--- Test For Ushi Strategy ---')
    joseki = AbIF9J_B_TPWE()

    bitboard8 = BitBoard()
    print(bitboard8)

    # 1手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 2手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 3手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 4手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 5手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 6手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 4)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 快速船基礎形
    # 7手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 3)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 8手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (4, 6)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 9手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 10手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (4, 1)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 11手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 12手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 1)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    #--------------------------------------------
    # 鼠定石
    print('--- Test For Nezumi Strategy ---')
    joseki = AbIF9J_B_TPW()

    bitboard8 = BitBoard()
    print(bitboard8)

    # 1手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 2手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 3手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 4手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 5手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (3, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 6手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 4)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 7手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (3, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 8手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 9手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 10手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 6)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 11手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (3, 6)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 12手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 13手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (6, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 14手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (6, 2)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 15手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 16手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 1)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 17手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 1)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 18手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (4, 6)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    #--------------------------------------------
    # 猫定石
    print('--- Test For Neko Strategy ---')
    joseki = SwitchNsIF9J_B_TPWE()

    bitboard8 = BitBoard()
    print(bitboard8)

    # 1手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 2手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 3手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 3)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 4手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 2)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 5手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 6手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 7手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 8手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 2)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 9手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 1)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 10手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 11手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 12手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 13手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (3, 6)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 14手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 7)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    #--------------------------------------------
    # 羊定石
    print('--- Test For Hitsuji Strategy ---')
    joseki = AbIF9J_B_TPWEC()

    bitboard8 = BitBoard()
    print(bitboard8)

    # 1手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (5, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 2手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 3手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 3)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 4手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (3, 2)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 5手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 6手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 3)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 7手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (4, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 8手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 2)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 9手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 5)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 10手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (5, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 11手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (6, 4)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 12手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (6, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 13手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (2, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 14手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (7, 5)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 15手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (6, 3)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 16手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (7, 4)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    # 17手目
    move = joseki.next_move('black', bitboard8)
    print(move)
    assert move == (7, 2)
    bitboard8.put_disc('black', *move)
    print(bitboard8)

    # 18手目
    move = joseki.next_move('white', bitboard8)
    print(move)
    assert move == (2, 4)
    bitboard8.put_disc('white', *move)
    print(bitboard8)

    #-----------------------------------#
    color, move = 'white', (2, 4)
    b, w =  bitboard8.get_bitboard_info()
    rotate_flip(color, b, w, move)
    import sys
    sys.exit()
    #-----------------------------------#
